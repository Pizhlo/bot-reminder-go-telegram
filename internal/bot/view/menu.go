package view

import tele "gopkg.in/telebot.v3"

var (
	// -------------- –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é --------------

	// inline –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è
	BtnProfile = selector.Data("üë§–ü—Ä–æ—Ñ–∏–ª—å", "profile")
	// inline –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
	BtnSettings = selector.Data("‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "settings")

	// inline –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–º–µ—Ç–æ–∫
	BtnNotes = selector.Data("üìù–ó–∞–º–µ—Ç–∫–∏", "notes")
	// inline –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
	BtnReminders = selector.Data("‚è∞–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", "reminders")

	// inline –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –º–µ–Ω—é
	BtnBackToMenu = selector.Data("‚¨ÖÔ∏è–ú–µ–Ω—é", "menu")

	// --------------- –ø—Ä–æ—Ñ–∏–ª—å --------------

	// inline –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ
	BtnSubscription = selector.Data("üñä–ü–æ–¥–ø–∏—Å–∫–∞", "subscription")

	// --------------- –∑–∞–º–µ—Ç–∫–∏ --------------

	// inline –∫–Ω–æ–ø–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫
	BtnDeleteAllNotes    = selector.Data("‚ùå–£–¥–∞–ª–∏—Ç—å –≤—Å–µ", "delete_notes")
	BtnSearchNotesByText = selector.Data("üîç–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É", "search_notes_by_text")
	BtnSearchNotesByDate = selector.Data("üîç–ü–æ–∏—Å–∫ –ø–æ –¥–∞—Ç–µ", "search_notes_by_text")

	// --------------- –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è --------------

	// inline –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
	BtnBackToReminderType = selector.Data("‚¨ÖÔ∏è–ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º", "reminder_type")

	// inline –∫–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
	BtnCreateReminder = selector.Data("üìù–°–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", "create_reminder")

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å
	BtnSeveralTimesDayReminder = selector.Data("–ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å", "several_times_day")

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
	BtnEveryDayReminder = selector.Data("–ï–∂–µ–¥–Ω–µ–≤–Ω–æ", "everyday")

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –†–∞–∑ –≤ –Ω–µ–¥–µ–ª—é
	BtnEveryWeekReminder = selector.Data("–†–∞–∑ –≤ –Ω–µ–¥–µ–ª—é", "every_week")

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –†–∞–∑ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π
	BtnSeveralDaysReminder = selector.Data("–†–∞–∑ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π", "once_several_days")

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –†–∞–∑ –≤ –º–µ—Å—è—Ü
	BtnOnceMonthReminder = selector.Data("–†–∞–∑ –≤ –º–µ—Å—è—Ü", "once_month")

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –†–∞–∑ –≤ –≥–æ–¥
	BtnOnceYear = selector.Data("–†–∞–∑ –≤ –≥–æ–¥", "once_year")

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –û–¥–∏–Ω —Ä–∞–∑
	BtnOnce = selector.Data("–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É", "date")
)

// BackToMenuBtn –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
func BackToMenuBtn() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnBackToMenu),
	)

	return menu
}

// MainMenu –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
// –ö–Ω–æ–ø–∫–∏: –ü—Ä–æ—Ñ–∏–ª—å, –ù–∞—Å—Ç—Ä–æ–π–∫–∏, –ó–∞–º–µ—Ç–∫–∏, –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
func MainMenu() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnProfile, BtnSettings),
		menu.Row(BtnNotes, BtnReminders),
	)

	return menu
}

// NotesAndMenuBtns –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏: –ó–∞–º–µ—Ç–∫–∏ –∏ –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é
func NotesAndMenuBtns() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnNotes),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

// RemindersAndMenuBtns –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏: –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é
func RemindersAndMenuBtns() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnReminders),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

// DeleteAllNotesAndBackToMenu –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏: —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏ –∏ –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é
func DeleteAllNotesAndBackToMenu() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnDeleteAllNotes),
		menu.Row(BtnSearchNotesByText, BtnSearchNotesByDate),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

// ProfileMenu –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —Ä–∞–∑–¥–µ–ª–∞ –ü—Ä–æ—Ñ–∏–ª—å
func ProfileMenu() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnSubscription),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

// CreateReminderAndBackToMenu –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é
func CreateReminderAndBackToMenu() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnCreateReminder),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

// ReminderTypes –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —Å —Ç–∏–ø–∞–º–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
func ReminderTypes() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnSeveralTimesDayReminder, BtnEveryDayReminder),
		menu.Row(BtnEveryWeekReminder, BtnSeveralDaysReminder),
		menu.Row(BtnOnceMonthReminder, BtnOnceYear),
		menu.Row(BtnOnce),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

// BackToReminderMenuBtns –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏: –ù–∞–∑–∞–¥ –∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º, –≤ –º–µ–Ω—é
func BackToReminderMenuBtns() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnBackToMenu, BtnBackToReminderType),
	)

	return menu
}
