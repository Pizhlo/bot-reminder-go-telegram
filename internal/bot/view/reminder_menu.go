package view

import (
	"fmt"

	"github.com/Pizhlo/bot-reminder-go-telegram/internal/bot/model"
	tele "gopkg.in/telebot.v3"
)

var (
	// --------------- –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è --------------

	// inline –∫–Ω–æ–ø–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ä–∞–±–æ—Ç–∞–≤—à–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
	//BtnDeleteReminder = tele.Btn{Text:"‚ùå–£–¥–∞–ª–∏—Ç—å", Unique:"")

	// inline –∫–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
	BtnCreateReminder = tele.Btn{Text: "üìù–°–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", Unique: "create_reminder"}

	// inline –∫–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
	BtnDeleteAllReminders = tele.Btn{Text: "‚ùå–£–¥–∞–ª–∏—Ç—å –≤—Å–µ", Unique: "delete_reminders"}

	// --------------- —Ç–∏–ø—ã --------------

	// inline –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
	BtnBackToReminderType = tele.Btn{Text: "‚¨ÖÔ∏è–ö –≤—ã–±–æ—Ä—É", Unique: "reminder_type"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å
	BtnSeveralTimesDayReminder = tele.Btn{Text: "–ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å", Unique: "several_times_day"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
	BtnEveryDayReminder = tele.Btn{Text: "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ", Unique: "everyday"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –†–∞–∑ –≤ –Ω–µ–¥–µ–ª—é
	BtnEveryWeekReminder = tele.Btn{Text: "–†–∞–∑ –≤ –Ω–µ–¥–µ–ª—é", Unique: "every_week"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –†–∞–∑ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π
	BtnSeveralDaysReminder = tele.Btn{Text: "–†–∞–∑ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π", Unique: "once_several_days"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –†–∞–∑ –≤ –º–µ—Å—è—Ü
	BtnOnceMonthReminder = tele.Btn{Text: "–†–∞–∑ –≤ –º–µ—Å—è—Ü", Unique: "once_month"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –†–∞–∑ –≤ –≥–æ–¥
	BtnOnceYear = tele.Btn{Text: "–†–∞–∑ –≤ –≥–æ–¥", Unique: "once_year"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –û–¥–∏–Ω —Ä–∞–∑
	BtnOnce = tele.Btn{Text: "–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É", Unique: "date"}
	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –°–µ–≥–æ–¥–Ω—è
	BtnToday = tele.Btn{Text: "–°–µ–≥–æ–¥–Ω—è", Unique: "today"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –ó–∞–≤—Ç—Ä–∞
	BtnTomorrow = tele.Btn{Text: "–ó–∞–≤—Ç—Ä–∞", Unique: "tomorrow"}
)

// CreateReminderAndBackToMenu –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏ –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é
func CreateReminderDeleteAndBackToMenu() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnCreateReminder),
		menu.Row(BtnDeleteAllReminders),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

// CreateReminderAndBackToMenu –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é
func CreateReminderAndBackToMenu() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnCreateReminder),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

// ReminderTypes –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —Å —Ç–∏–ø–∞–º–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
func ReminderTypes() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnToday, BtnTomorrow),
		menu.Row(BtnSeveralTimesDayReminder, BtnEveryDayReminder),
		menu.Row(BtnEveryWeekReminder, BtnSeveralDaysReminder),
		menu.Row(BtnOnceMonthReminder, BtnOnceYear),
		menu.Row(BtnOnce),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

// BackToRemindersAndMenu –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏: –Ω–∞–∑–∞–¥ –∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏, –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é
func BackToRemindersAndMenu() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnReminders),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

// BackToReminderMenuBtns –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏: –ù–∞–∑–∞–¥ –∫ —Ç–∏–ø–∞–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π, –≤ –º–µ–Ω—é
func BackToReminderMenuBtns() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnBackToMenu, BtnBackToReminderType),
	)

	return menu
}

// RemindersAndMenuBtns –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏: –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é
func RemindersAndMenuBtns() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnReminders),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

// DeleteReminderBtn –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–æ–ø–∫—É –£–¥–∞–ª–∏—Ç—å.
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ–≥–¥–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ.
func DeleteReminderBtn(reminder model.Reminder) tele.Btn {
	unique := fmt.Sprintf("%d-%d", reminder.ID, reminder.TgID)

	return tele.Btn{Text: "‚ùå–£–¥–∞–ª–∏—Ç—å", Unique: unique, Data: unique}
}

// DeleteReminderMenu –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π –£–¥–∞–ª–∏—Ç—å.
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ–≥–¥–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ.
func DeleteReminderMenu(reminder model.Reminder) *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	unique := fmt.Sprintf("%d.%d", reminder.ID, reminder.TgID)

	btn := menu.Data("‚ùå–£–¥–∞–ª–∏—Ç—å", unique)

	menu.Inline(
		menu.Row(btn),
	)

	return menu
}

var (
	// --------------- –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å --------------

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –†–∞–∑ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç
	BtnMinutesReminder = tele.Btn{Text: "–†–∞–∑ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç", Unique: "minutes"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –†–∞–∑ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤
	BtnHoursReminder = tele.Btn{Text: "–†–∞–∑ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤", Unique: "hours"}
)

// SeveralTimesBtns –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏: —Ä–∞–∑ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç, —Ä–∞–∑ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤
func SeveralTimesBtns() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnMinutesReminder, BtnHoursReminder),
		menu.Row(BtnBackToMenu, BtnBackToReminderType),
	)

	return menu
}

var (
	// --------------- —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é --------------

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –ö–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
	MondayBtn = tele.Btn{Text: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", Unique: "monday"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –ö–∞–∂–¥—ã–π –≤—Ç–æ—Ä–Ω–∏–∫
	TuesdayBtn = tele.Btn{Text: "–í—Ç–æ—Ä–Ω–∏–∫", Unique: "tuesday"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –ö–∞–∂–¥—É—é —Å—Ä–µ–¥—É
	WednesdayBtn = tele.Btn{Text: "–°—Ä–µ–¥–∞", Unique: "wednesday"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –ö–∞–∂–¥—ã–π —á–µ—Ç–≤–µ—Ä–≥
	ThursdayBtn = tele.Btn{Text: "–ß–µ—Ç–≤–µ—Ä–≥", Unique: "thursday"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –ö–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É
	FridayBtn = tele.Btn{Text: "–ü—è—Ç–Ω–∏—Ü–∞", Unique: "friday"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –ö–∞–∂–¥—É—é —Å—É–±–±–æ—Ç—É
	SaturdayBtn = tele.Btn{Text: "–°—É–±–±–æ—Ç–∞", Unique: "saturday"}

	// —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: –ö–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
	SundayBtn = tele.Btn{Text: "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", Unique: "sunday"}
)

// WeekMenu –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é –¥–Ω—è–º–∏ –Ω–µ–¥–µ–ª–∏
func WeekMenu() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(MondayBtn, TuesdayBtn),
		menu.Row(WednesdayBtn, ThursdayBtn),
		menu.Row(FridayBtn, SaturdayBtn),
		menu.Row(SundayBtn),
		menu.Row(BtnBackToMenu, BtnBackToReminderType),
	)

	return menu
}
